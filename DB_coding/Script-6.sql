--Q1 사원테이블에서 월급이 10000이상인 사람의 사원번호와 성을 출력하시오.
SELECT EMPLOYEE_ID, LAST_NAME
FROM EMPLOYEES
WHERE SALARY >=10000;

--Q2 성이 'S'로 시작하는 사람들의 평균 월급보다 월급을 더 많이 받는 사람의 사원번호와,성,월급을 출력하시오
--   단 출력시 월급을 오름차순으로 정렬하시오
SELECT EMPLOYEE_ID ,FIRST_NAME, SALARY 
FROM EMPLOYEES
WHERE SALARY >
(SELECT AVG(SALARY) FROM EMPLOYEES WHERE FIRST_NAME LIKE 'S%')
ORDER BY SALARY;

--Q3 각 도시별 모든 부서 직원들의 평균월급,해당 도시의 직원수를 출력하시오 
--   단 평균원급을 오름차순으로 정렬하시오 
--   단 도시에 근 무하는 직원이 10명 이상인 곳은 제외하시오
SELECT CITY , AVG(SALARY) , COUNT(*)
FROM EMPLOYEES JOIN DEPARTMENTS USING (DEPARTMENT_ID) 
JOIN LOCATIONS USING(LOCATION_ID) 
GROUP BY CITY
HAVING COUNT(*) < 10
ORDER BY AVG(SALARY) ASC;

--Q4 사원번호가 105, 205인 직원의 지역을 구하시오
SELECT REGION_NAME
FROM EMPLOYEES JOIN DEPARTMENTS USING(DEPARTMENT_ID)
JOIN LOCATIONS USING(LOCATION_ID)
JOIN COUNTRIES USING(COUNTRY_ID)
JOIN REGIONS USING(REGION_ID)
WHERE EMPLOYEE_ID IN ('105','205');

--Q5 2007년에 입사(hire_date)한 직원들의 사원번호, 이름 
--   부서명을 조회하시오  
--   단 부서에 배치되지 않은 직원의 경우 'N'으로 출력하시오.
--   컬럼의 별칭을 적어주시오. (사원번호 = 사원번호, 이름 = 이름, 부서명(함수) = 부서명)
SELECT EMPLOYEE_ID, FIRST_NAME, NVL(DEPARTMENT_NAME,'N')
FROM EMPLOYEES LEFT JOIN DEPARTMENTS USING(DEPARTMENT_ID)
WHERE TO_CHAR(HIRE_DATE ,'YYYY') = '2007';

--Q6 부서별로 가정 적은 급여를 받고 있는 직원의 이름, 부서이름, 급여를 출력하시오.
--   단 부서이름으로 오름차순 하시오
--   컬럼의 별칭을 적어주시오. (이름 = 이름, 부서이름 = 부서명 , 급여 = 급여)
SELECT FIRST_NAME AS 이름 ,A.D AS 부서명 , SALARY AS 급여
FROM EMPLOYEES E ,
(SELECT DEPARTMENT_ID AS A,MIN(SALARY) AS M ,DEPARTMENT_NAME AS D
FROM EMPLOYEES JOIN DEPARTMENTS USING(DEPARTMENT_ID)
GROUP BY DEPARTMENT_NAME,DEPARTMENT_ID ) A
WHERE (E.DEPARTMENT_ID =A.A) AND E.SALARY = A.M
ORDER BY 2;


 SELECT FIRST_NAME,MYRES.DE,SALARY
FROM EMPLOYEES E join
(SELECT E.DEPARTMENT_ID, D.DEPARTMENT_NAME as DE, MIN(E.SALARY) AS M FROM EMPLOYEES E JOIN DEPARTMENTS D ON E.DEPARTMENT_ID = D.DEPARTMENT_ID
GROUP BY D.DEPARTMENT_NAME, E.DEPARTMENT_ID) MYRES
USING (DEPARTMENT_ID)
WHERE E.SALARY = MYRES.M
ORDER BY 2;



--Q7 입사년도가 2020년 1월 1일 기준으로 12년이상인 직원의 이름,부서명,도시를 출력하시오.
--	  단 부서명이 없는경우 부서명을 N으로 출력
SELECT FIRST_NAME, NVL(DEPARTMENT_NAME,'N'), CITY
FROM EMPLOYEES LEFT JOIN DEPARTMENTS USING(DEPARTMENT_ID)
LEFT JOIN LOCATIONS USING(LOCATION_ID)
WHERE TRUNC(MONTHS_BETWEEN('2020/01/01',HIRE_DATE)/12) >= 12;

--Q8 부서별 직원들의 최대급여,최소급여,평균급여을 조회하시오(부서이름도 같이 조회)
--   단 평균급여가 'Public Relations'부서의 평균 급여보다 많고
--   'Executive' 부서보다 적은 정보만 출력하시오.
SELECT DEPARTMENT_NAME,MAX(SALARY), MIN(SALARY),AVG(SALARY)
FROM EMPLOYEES JOIN DEPARTMENTS USING(DEPARTMENT_ID)
GROUP BY DEPARTMENT_NAME
HAVING AVG(SALARY) >
(SELECT AVG(SALARY) 
FROM EMPLOYEES JOIN DEPARTMENTS  USING(DEPARTMENT_ID)
WHERE DEPARTMENT_NAME ='Public Relations')
AND AVG(SALARY) <
(SELECT AVG(SALARY) 
FROM EMPLOYEES JOIN DEPARTMENTS USING(DEPARTMENT_ID)
WHERE DEPARTMENT_NAME ='Executive');

--Q9 부서별 직원의 수를 출력하시오.(부서명도 출력하되, 부서명이 없는 직원의 부서명은 'N'으로 출력하시오.)
SELECT NVL(DEPARTMENT_NAME,'N'),COUNT(*)
FROM EMPLOYEES LEFT JOIN DEPARTMENTS USING(DEPARTMENT_ID)
GROUP BY DEPARTMENT_NAME;
-- GROUP BY를 DEPARTMENT_ID로 못하는 이유는 DEPARTMENT_NAME 출력하기때문에
-- DEPARTMENT_NAME 싱글을 못쓴다 COUNT때문에 그래서 그룹해주어야함

--Q10 NVL,IS NOT NULL 키워드를 사용하지 않고, ROWNUM을 이용하여 커미션을 가장 많이 받는 상위 4명의
--    부서명,이름,급여,커미션을 조회하시오.
--    출력결과는 커미션이 높은순, 커미션이 같다면 월급이 높은순으로 출력하시오
SELECT *
FROM(
SELECT DEPARTMENT_NAME,FIRST_NAME,SALARY,COMMISSION_PCT
FROM EMPLOYEES JOIN DEPARTMENTS USING(DEPARTMENT_ID)
ORDER BY COMMISSION_PCT DESC NULLS LAST,SALARY DESC)
WHERE ROWNUM <=4;
-- NVL에는 같은 타입만 들어가야함 ID가 넘버타입이면 숫자들만





